@model PaginationVM<Order>

@inject IEncryptionService encryptionService

@{
    bool isDeliveredOrders = Model.Items.FirstOrDefault().Status == OrderStatus.Delivered;
    decimal MostExpensiveOrder = (decimal)(Model.UnieqElement ?? 0d);
    string currentSearch = ViewContext.HttpContext.Request.Query["searchById"];
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<div class="container py-4">
    <div class="row mb-4 align-items-center">
        <div class="col-md-4">
            <h5 class="text-muted">@Model.TotalItems Orders</h5>
        </div>
        <div class="col-md-4">
            <form asp-action="@(isDeliveredOrders ? "CompletedRestaurantOrders" : "CurrentRestaurantOrders")" method="get" class="d-flex">
                <input name="searchById"
                       value="@currentSearch"
                       class="form-control me-2"
                       placeholder="Search by Order ID..."
                       type="search" />
                <button type="submit" class="btn btn-danger">Search</button>
            </form>
        </div>
        <div class="col-md-4 text-end">
            <h5 class="text-muted">
                Top Order:
                <strong class="text-success">@MostExpensiveOrder L.E</strong>
            </h5>
        </div>
    </div>

    <div class="row mb-4 g-2 align-items-center">
        <div class="col-md-4">
            <input id="searchId"
                   type="text"
                   class="form-control"
                   placeholder="Search by Order ID..." />
        </div>
        <div class="col-md-4">
            <select id="filterStatus" class="form-select">
                @if (isDeliveredOrders)
                {
                    <option value="Delivered">Delivered</option>
                }
                else
                {
                    <option value="">All Statuses</option>
                    <option value="Pending">Pending</option>
                    <option value="Preparing">Preparing</option>
                    <option value="Shipped">Shipped</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <select id="filterMethod" class="form-select">
                <option value="">All Payments</option>
                <option value="Cash">Cash</option>
                <option value="Credit">Credit</option>
            </select>
        </div>
    </div>

    <div id="ordersRow" class="row g-4 mb-5">
        @foreach (var item in Model.Items)
        {
            string encryptedId = encryptionService.EncryptId(item.Id);
            var user = item.User;
            <div class="col-12 col-md-6 col-lg-4 order-card"
                 data-id="@item.Id"
                 data-status="@item.Status"
                 data-method="@item.Method">
                <div class="card-modern">
                    <div class="card-header-modern d-flex justify-content-between">
                        <span>Order #@item.Id</span>
                        @if (item.TotalOrderPrice == MostExpensiveOrder)
                        {
                            <span class="label">Top Order</span>
                        }
                    </div>
                    <div class="card-body-modern">
                        <div class="orderUserDetails p-0"></div>
                        <p>
                            <strong>Date:</strong>
                            @item.OrderDate.ToString("yyyy-MM-dd HH:mm:ss tt")
                        </p>
                        <p><strong>Sub Price:</strong> @item.TotalMealsPrice L.E</p>
                        <p><strong>Delivery Fee:</strong> @item.TotalTaxPrice L.E</p>
                        <p><strong>Total Price:</strong> @item.TotalOrderPrice L.E</p>
                        <p><strong>Paynent Method:</strong> @item.Method</p>
                        <hr />
                        <p class="mb-1">
                            <strong>Status:</strong>
                            <span class="badge bg-@(item.Status == OrderStatus.Pending ? "secondary" :
                                  item.Status == OrderStatus.Preparing ? "warning" :
                                  "info")">
                                @item.Status
                            </span>
                        </p>

                        <div class="d-flex flex-wrap gap-2 mt-2">                           
                            <button class="view-details btn btn-modern btn-outline-primary"
                                    data-id="@item.Id">
                                View User
                            </button>
                            <a class="btn btn-modern btn-outline-success"
                               asp-controller="Order"
                               asp-action="Details"
                               asp-route-id="@encryptedId">
                                Details
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav aria-label="Page navigation example" class="mb-5">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@(isDeliveredOrders ? "CompletedRestaurantOrders" : "CurrentRestaurantOrders")" asp-route-currentPageNumber="@(Model.CurrentPageNumber - 1)">
                        Previous
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                if (i == Model.CurrentPageNumber)
                {
                    <li class="page-item active" aria-current="page">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action=@(isDeliveredOrders ? "CompletedRestaurantOrders" : "CurrentRestaurantOrders") asp-route-currentPageNumber="@i">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action=@(isDeliveredOrders ? "CompletedRestaurantOrders" : "CurrentRestaurantOrders") asp-route-currentPageNumber="@(Model.CurrentPageNumber + 1)">
                        Next
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        $(function () {
          var detailsUrl = '@Url.Action(
           "OrderUserDetailsPartial", "RestaurantOrders", new { area = "SuperAdmin" }
        )';

          function filterOrders() {
            var searchVal = $('#searchId').val().toString().trim(),
                statusVal = $('#filterStatus').val(),
                methodVal = $('#filterMethod').val();

            $('.order-card').each(function () {
              var $c = $(this),
                  id     = $c.data('id').toString(),
                  status = $c.data('status'),
                  method = $c.data('method');

              var matchesId     = searchVal === '' || id.indexOf(searchVal) !== -1,
                  matchesStatus = statusVal === '' || status === statusVal,
                  matchesMethod = methodVal === '' || method === methodVal;

              if (matchesId && matchesStatus && matchesMethod) {
                $c.show();
              } else {
                $c.hide();
              }
            });
          }

          $('#searchId').on('input', filterOrders);
          $('#filterStatus').on('change', filterOrders);
          $('#filterMethod').on('change', filterOrders);

          $('.view-details').on('click', function () {
            var orderId      = $(this).data('id'),
                $placeholder = $(this).closest('.card-modern').find('.orderUserDetails');

            $placeholder.html(
              '<div class="spinner-border spinner-border-sm" role="status">' +
                '<span class="visually-hidden">Loading...</span>' +
              '</div>'
            );

            $.get(detailsUrl, { orderId: orderId })
             .done(function (html) { $placeholder.html(html); })
             .fail(function () {
               $placeholder.html('<div class="text-danger">Unable to load user details.</div>');
             });
          });
        });
    </script>
}