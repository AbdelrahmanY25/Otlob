@using Otlob.Core.IUnitOfWorkRepository
@using Otlob.Core.Models
@model IEnumerable<Otlob.Core.Models.OrderDetails>
@inject IUnitOfWorkRepository unitOfWorkRepository

@if (ViewBag.OrderDetails.Status == OrderStatus.Delivered) 
{
    <div class="btn btn-warning"><a href="/SuperAdmin/Resturants/DeliveredOrders/@ViewBag.OrderDetails.RestaurantId">Back to resturant orders</a></div>
}
else 
{
    <div class="btn btn-warning"><a href="/SuperAdmin/Resturants/CurrentResturantOrders/@ViewBag.OrderDetails.RestaurantId">Back to resturant orders</a></div>
}

<h3 class="mt-3">Order Summary</h3>

<table class="table table-bordered table-striped dt-responsive nowrap">
    <thead>
        <tr>
            <th>
                Meal
            </th>
            <th></th>
            <th>
                Additons
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @* <img alt="MealLogo" class="avatar rounded-circle" src="/images/meals/@unitOfWorkRepository.Meals.GetOne(expression: m => m.Id == item.MealId).ImageUrl" /> *@
                    <img class="avatar rounded-circle" alt="MealLogo" src="data:image/*;base64,@(Convert.ToBase64String(unitOfWorkRepository.Meals.GetOne(expression: m => m.Id == item.MealId).Image))" />
                    @Html.DisplayFor(modelItem => item.Meal.Name)
                </td>
                <td class="text-center text-success">
                    X @Html.DisplayFor(modelItem => item.MealQuantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Meal.Description)
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="text-center">
    PaymentMethod : @ViewBag.OrderDetails.Method
</div>

<div class="text-center">
    Sub Price : @ViewBag.SubPrice L.E <br />
    DeliveryFee : @ViewBag.DeliveryFee L.E <br />
    Total Price : @(ViewBag.DeliveryFee + ViewBag.SubPrice) L.E
</div>