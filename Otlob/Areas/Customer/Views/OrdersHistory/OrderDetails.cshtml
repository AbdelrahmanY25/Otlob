@using Otlob.Core.IUnitOfWorkRepository
@model IEnumerable<Otlob.Core.Models.MealsInOrder>
@inject IUnitOfWorkRepository unitOfWorkRepository

<div class="btn btn-warning"><a asp-action="TrackOrders">Back to orders</a></div>

<h3 class="mt-3">Order Summary</h3>

<table class="table">
    <thead>
        <tr>            
            <th>
                Meal
            </th>
            <th>
                Your Additons
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                Meal Price
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>            
            <td>
                @* <img alt="MealLogo" class="avatar rounded-circle" src="/images/meals/@unitOfWorkRepository.Meals.GetOne(expression: m => m.Id == item.MealId).Image"/> *@

                <img alt="MealLogo" class="avatar rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(unitOfWorkRepository.Meals.GetOne(expression: m => m.Id == item.MealId).Image))" />

                @Html.DisplayFor(modelItem => item.Meal.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Meal.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>   
            <td>
                @unitOfWorkRepository.Meals.GetOne(expression: m => m.Id == item.MealId).Price L.E
            </td>
        </tr>
}
    </tbody>
</table>

<div class ="text-center">
    PaymentMethod : @ViewBag.OrderDetails.Method
</div>

<div class="text-center">
    Sub Price : @ViewBag.SubPrice L.E <br />
    DeliveryFee : @ViewBag.DeliveryFee L.E <br />
    Total Price : @(ViewBag.DeliveryFee + ViewBag.SubPrice) L.E
</div>