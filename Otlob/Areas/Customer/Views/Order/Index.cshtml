@using Microsoft.AspNetCore.Identity
@using Otlob.Core.IUnitOfWorkRepository
@using Otlob.Core.Models
@using RepositoryPatternWithUOW.Core.Models
@inject IUnitOfWorkRepository unitOfWorkRepository
@inject UserManager<ApplicationUser> userManager
@model IEnumerable<Cart>

@section Notify {
    <partial name="_NotificationPartial"></partial>
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pay Page</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>       
        .map-container {
            margin: 20px auto;
            width: 100%;
            height: 300px;
            border-radius: 12px;
            overflow: hidden;
        }

        .card {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            gap: 15px;
        }

        .card .image select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 8px;
        }

        .card .text p {
            margin: 5px 0;
            font-size: 14px;
            color: #333;
        }

        .card .notes {
            margin-top: 10px;
        }

        .card .notes label {
            font-size: 14px;
            color: #555;
            font-weight: 500;
            margin-bottom: 5px;
        }

        .card .notes textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
            resize: none;
            font-size: 14px;
            color: #333;
        }

        .card .notes textarea:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
        }

        .card .buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card .btn {
            margin-top: 10px;
            font-size: 14px;
        }

        @@media (max-width: 768px) {
            .card {
                padding: 15px;
            }

            .card .buttons {
                flex-direction: column;
                gap: 10px;
            }

            .card .btn {
                width: 100%;
            }

        }
    </style>
</head>

<body>  
    <div class="articles">
        <div class="container">

            @foreach (var item in Model)
            {
                IEnumerable<OrderedMeals>? order = unitOfWorkRepository.OrderedMeals.Get([o => o.Meal], expression: o => o.CartId == item.Id);
                Restaurant? restaurant = unitOfWorkRepository.Restaurants.GetOne(expression: r => r.Id == item.ResturantId);

                decimal supPrice = 0;
                foreach (var meal in order)
                {
                    supPrice += meal.Meal.Price * meal.Quantity;
                }

                <div class="card mb-5">
                    <form asp-action="PlaceOrder">
                        <input type="hidden" name="Id" value="0" />
                        <input type="hidden" name="ApplicationUserId" value="@userManager.GetUserId(User)" />
                        <input type="hidden" name="RestaurantId" value="@item.ResturantId" />
                        <input type="hidden" name="CartId" value="@item.Id" />

                        <div class="image">
                            <label for="addressSelect">Select Delivery Address:</label>
                            <select name="CustomerAddres" id="addressSelect" class="form-select">
                                @foreach (var address in ViewBag.Address)
                                {
                                    <option>@address.CustomerAddres</option>
                                }
                            </select>
                        </div>

                        <div class="text">
                            <select name="Method" class="form-select">
                                <option>@PaymentMethod.Cash</option>
                                <option>@PaymentMethod.Credit</option>
                            </select>
                            <p><strong>Delivery Time:</strong> @restaurant.DeliveryDuration mins</p>
                            <p>
                                <strong>Sub Price:</strong> @(supPrice + " L.E")
                            </p>
                            <p>
                                <strong>Delivery Fee:</strong> @(restaurant.DeliveryFee + " L.E")
                            </p>
                            <p class="text-success">
                                <strong>Total Price:</strong> @(supPrice + restaurant.DeliveryFee + " L.E")
                            </p>
                            <input type="hidden" name="OrderPrice" readonly value="@(supPrice + restaurant.DeliveryFee)" />
                        </div>


                        <div class="notes">
                            <label for="orderNotes" class="form-label">Special Instructions (Optional):</label>
                            <textarea name="Notes" id="orderNotes" class="form-control" placeholder="Add special instructions for your order..."></textarea>
                        </div>

                        <div class="buttons mt-3">
                            <input type="submit" value="Place Order" class="btn btn-success btn-sm" />
                        </div>
                    </form>
                </div>

            }
        </div>
    </div>

</body>

</html>
